@model CorujaPresentation.Models.RegisterViewModel
@{
    ViewBag.Title = "Cadastro";
}

<!-- CADASTRO	================================= -->
<section id="Cadastro" class="section section-gray">

    
    <div class="container">

        <h2 class="section-heading text-center">Conta Coruja</h2>

        <div class="row centered-form">

            <div class="panel-group">

                <div class="panel panel-default">

                    <div class="panel-heading">
                        <h3 class="panel-title text-center">Nova Conta</h3>
                    </div>


                    <div class="panel-body">

                        @using (Html.BeginForm("Cadastro", "Conta", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()


                            <div class="col-xs-6">

                          

                                <div class="form-group">
                                
                                    @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Nome" } })
                                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })

                                </div>


                                <div class="form-group">


                                    @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Sobrenome" } })
                                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">


                                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Data de Nascimento" } })
                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.Cpf, new { htmlAttributes = new { Id = "Cpf", @class = "form-control input-sm", placeholder = "CPF" } })
                                    @Html.ValidationMessageFor(m => m.Cpf, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.Rg, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "RG" } })
                                    @Html.ValidationMessageFor(m => m.Rg, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.Graduation, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Graduação" } })
                                    @Html.ValidationMessageFor(m => m.Graduation, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.Cep, new { htmlAttributes = new { Id = "Cep", @class = "form-control input-sm", placeholder = "CEP" } })
                                    @Html.ValidationMessageFor(m => m.Cep, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.Address, new { htmlAttributes = new { Id = "Address", @class = "form-control input-sm", placeholder = "Endereço" } })
                                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.AddressNumber, new { htmlAttributes = new { Id = "AddressNumber", @class = "form-control input-sm", placeholder = "Número" } })
                                    @Html.ValidationMessageFor(m => m.AddressNumber, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.Nhood, new { htmlAttributes = new { Id = "Nhood", @class = "form-control input-sm", placeholder = "Bairro" } })
                                    @Html.ValidationMessageFor(m => m.Nhood, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.City, new { htmlAttributes = new { Id = "City", @class = "form-control input-sm", placeholder = "Cidade" } })
                                    @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.State, new { htmlAttributes = new { Id = "State", @class = "form-control input-sm", placeholder = "Estado" } })
                                    @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.Country, new { htmlAttributes = new { Id = "Country", @class = "form-control input-sm", placeholder = "País" } })
                                    @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.NewsLetter, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(m => m.NewsLetter, "", new { @class = "text-danger" })
                                    @Html.CheckBox("ReceiveNewsletter", true)
                                    <label for="ReceiveNewsletter" style="display:inline">Receive Newsletter?</label>

                                </div>



                                <div class="form-group">

                                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Email" } })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                   
                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Telefone" } })
                                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })

                                </div>

                            </div>

                            // new property

                            <div class="col-xs-6">

                                <div class="form-group">

                                    @Html.EditorFor(m => m.CellPhoneNumber, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Celular" } })
                                    @Html.ValidationMessageFor(m => m.CellPhoneNumber, "", new { @class = "text-danger" })

                                </div>


                                <div class="form-group">

                                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Senha" } })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group">

                                    @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control input-sm", placeholder = "Confirmar Senha" } })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                                </div>


                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" class="btn btn-info btn-block" value="Criar conta" />
                                    </div>
                                </div>

                            </div>

                        }

                    </div>


                </div>

            </div>

          </div>


     </div>

</section>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/inputmask")


        <script type="text/javascript">

        $(document).ready(function() {

            function limpa_formulário_cep() {
                // Limpa valores do formulário de cep.
                $("#Address").val("");
                $("#Nhood").val("");
                $("#City").val("");
                $("#State").val("");
            }

            //Quando o campo cep perde o foco.
            $("#Cep").blur(function() {

                //Nova variável "cep" somente com dígitos.
                var cep = $(this).val().replace(/\D/g, '');

                //Verifica se campo cep possui valor informado.
                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if(validacep.test(cep)) {

                        //Preenche os campos com "..." enquanto consulta webservice.
                        $("#Address").val("...")
                        $("#Nhood").val("...")
                        $("#City").val("...")
                        $("#State").val("...")


                        //Consulta o webservice viacep.com.br/
                        $.getJSON("//viacep.com.br/ws/"+ cep +"/json/?callback=?", function(dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                $("#Address").val(dados.logradouro);
                                $("#Nhood").val(dados.bairro);
                                $("#City").val(dados.localidade);
                                $("#State").val(dados.uf);

                            } //end if.
                            else {
                                //CEP pesquisado não foi encontrado.
                                limpa_formulário_cep();
                                alert("CEP não encontrado.");
                            }
                        });
                    } //end if.
                    else {
                        //cep é inválido.
                        limpa_formulário_cep();
                        alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {
                    //cep sem valor, limpa formulário.
                    limpa_formulário_cep();
                }
            });
        });

        </script>


    }


